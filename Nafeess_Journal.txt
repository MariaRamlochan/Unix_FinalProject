Nafees’s Journal
Journal log:

-April 15th, 2021
•	I have started working on the lab alongside Maria, but we got stuck at login in using the credentials given in the email.

-April 16th, 2021
•	We managed to login using the credentials and progress in the lab.

-April 17th , 2021
•	We have continued to work on the lab and attempt to finish it, as well as discussed on the content of the websites that we will be deploying for the project.

-April 23rd, 2021
•	I have been invited to join a git repository called Unix_FinalProject, by my teammate Maria.
•	I created a directory called /var/www/html/team.
•	I entered my VPS using my name@IP.address to clone the new repository in the /var/www/html/team directory.
•	We were a bit confused on to where to clone the repository. Was it the Local machine? The server? But at the end we decided to clone it on our local machine in Final_Project directory that I created in the home.
•	We were testing out the git commands by writing some texts in the install.md file.
Testing out git commands. Note to self:
-git add * (for multiple files) / git add (filename) 
- git commit -m “(comments/updates)” 
- git push 
- git pull (retrieve changes)
•	We tried conflicting our pushes by each typing something in the install file by Maria pushed it while I did not pull before pushing it.
•	Then after that I deleted the “<<<< and the =====” from the file since it appeared after the confliction then I pushed it to merged and fix the confliction.
•	We created 2 different files, one that I pushed, and Maria did not pull, and one that I made but did not pulled before pushing.

-April 26th, 2021
•	We started the Part2 of the Lab.
•	We started by installing all the dependencies needed to proceed with the lab by typing in “Sudo apt-get install ruby-full build-essential zlib1g-dev”
•	Afterwards we had to echo a few lines to the .bashrc. Although, I had a hard time doing that because I messed up in the command and had to ask for some help and guidance from the teacher.
•	In the link “http://localhost: 4000” we were able to view and access the website.
•	We did the Jekyll new “name of the Blog/site” to create a Jekyll website. This also provided us with the _site file that generates itself when we run the website.
•	We added some lines in the “index.markdown” file so that when we ran the website, the lines that we added displayed on the website.
•	To change the theme, we had a lot of trouble trying to get the theme to work. We had to go to the teacher to help us with it just to see that even the teacher was not able to do it properly. Even after she updated the instruction with a way that works, we still had a pretty hard time with it. We will ask the teacher once again to show us how to do it.

-April 27th, 2021
•	We started part 3 of the lab.
•	Inside of the team repository (Unix_FinalProject) Maria cleared all the files from lab 12 to have an empty repositpry instead of making a new one and I went ahead and pulled the changes.
•	Maria then went and the local repository and created a new Jekyll site called teamsSite. She added and committed the changes, the push it. And I went and pulled it.
•	We sent the teamSite to the repository to realize that we should not have done that since certain files were needed to be ignored in the .gitignore
•	We then discovered that the .gitignore file was invisible in the directory of the teamSite folder, but once we inputted the command “vim .gitignore” we noticed that the file was already populate with a few instructions to be ignored. 
•	We then just added the files that were autogenerated to the .gitignore.

-April 29th, 2021
•	Resuming from part 3
•	I went into my vps user and installed the dependencies needed for the Jekyll using the command “sudo aptget installed ruby-full build-essential zlib1g-dev” and by doing so it my teammate did not need to install the same package from her end. 
•	Because we noticed a message that said that it was already installed on her user.
•	We basically re-did the steps form part 2 #2 but in our respectful vps.
•	To be able to clone our repository into our vps user, my teammate went and installed git in it so that we would be able to clone it using the git clone command.
•	So for step 8 of part3, after cloning the repository, we pulled the files from the remote repository. 
•	For part3 #9 I copied the _site file to the var/www/html/team using the “sudo cp -r _site /var/www/html/team” command, and then my teammate verified the file on her end to make sure it was there
